1. Inspect the kubelet service and identify the network plugin configured for Kubernetes.

root@controlplane ~ ➜  ps -ef |grep kubelet |grep network --color
root      4263     1  0 04:22 ?        00:00:20 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --network-plugin=cni --pod-infra-container-image=k8s.gcr.io/pause:3.6

2. What is the path configured with all binaries of CNI supported plugins?
root@controlplane ➜  ls -l /opt/cni/bin/
total 70540
-rwxr-xr-x 1 root root  4159518 May 13  2020 bandwidth
-rwxr-xr-x 1 root root  4671647 May 13  2020 bridge
-rwxr-xr-x 1 root root 12124326 May 13  2020 dhcp
-rwxr-xr-x 1 root root  5945760 May 13  2020 firewall
-rwxr-xr-x 1 root root  3069556 May 13  2020 flannel
-rwxr-xr-x 1 root root  4174394 May 13  2020 host-device
-rwxr-xr-x 1 root root  3614480 May 13  2020 host-local
-rwxr-xr-x 1 root root  4314598 May 13  2020 ipvlan
-rwxr-xr-x 1 root root  3209463 May 13  2020 loopback
-rwxr-xr-x 1 root root  4389622 May 13  2020 macvlan
-rwxr-xr-x 1 root root  3939867 May 13  2020 portmap
-rwxr-xr-x 1 root root  4590277 May 13  2020 ptp
-rwxr-xr-x 1 root root  3392826 May 13  2020 sbr
-rwxr-xr-x 1 root root  2885430 May 13  2020 static
-rwxr-xr-x 1 root root  3356587 May 13  2020 tuning
-rwxr-xr-x 1 root root  4314446 May 13  2020 vlan

3. What is the CNI plugin configured to be used on this kubernetes cluster?
root@controlplane /var/lib/kubelet ➜  ls -l /etc/cni/net.d/
total 4
-rw-r--r-- 1 root root 292 Jul  7 04:23 10-flannel.conflist

4. What binary executable file will be run by kubelet after a container and its associated namespace are created.
root@controlplane /var/lib/kubelet ➜  ls -l /etc/cni/net.d/
total 4
-rw-r--r-- 1 root root 292 Jul  7 04:23 10-flannel.conflist

5. Deploy weave-net networking solution to the cluster.

Replace the default IP address and subnet of weave-net to the 10.50.0.0/16. 
Please check the official weave installation and configuration guide which is available at the top right panel. 

    1. Deploy weave

     2. Wait for the app to run
     
By default, the range of IP addresses and the subnet used by weave-net is 10.32.0.0/12 and it's overlapping with the host system IP addresses.
To know the host system IP address by running ip a command :-

root@controlplane ~ ➜  ip a |grep eth0
2800: eth0@if2801: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP group default 
    inet 10.5.152.3/24 brd 10.5.152.255 scope global eth0

if we deploy a weave manifest file directly without changing the default IP addresses it will overlap with the host system IP addresses and as a result, 
it's weave pods will go into an Error or CrashLoopBackOff state.

root@controlplane:~# kubectl get po -n kube-system | grep weave
weave-net-6mckb                        1/2     CrashLoopBackOff   6          6m46s

If we will go more deeper and inspect the logs then we can clearly see the issue :-
root@controlplane:~# kubectl logs -n kube-system weave-net-6mckb -c weave
Network 10.32.0.0/12 overlaps with existing route 10.40.56.0/24 on host

root@controlplane ~ ➜  kubectl get po app
NAME   READY   STATUS              RESTARTS   AGE
app    0/1     ContainerCreating   0          11m

root@controlplane ~ ✖ kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')&env.IPALLOC_RANGE=10.50.0.0/16"
serviceaccount/weave-net created
clusterrole.rbac.authorization.k8s.io/weave-net created
clusterrolebinding.rbac.authorization.k8s.io/weave-net created
role.rbac.authorization.k8s.io/weave-net created
rolebinding.rbac.authorization.k8s.io/weave-net created
daemonset.apps/weave-net created

root@controlplane ~ ➜  kubectl get po 
NAME   READY   STATUS    RESTARTS   AGE
app    1/1     Running   0          11m

     

